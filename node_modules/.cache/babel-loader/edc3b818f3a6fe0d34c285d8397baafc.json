{"ast":null,"code":"var _jsxFileName = \"/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trybewallet/src/components/WalletForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrenciesAll } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  inpValue: '',\n  inpDescription: '',\n  inpCurrency: 'USD',\n  inpMethod: 'Dinheiro',\n  inpTag: 'Alimentação'\n};\n\nclass WalletForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = INITIAL_STATE;\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        dispatchTot,\n        expense\n      } = this.props;\n      const id = expense.length;\n      dispatchTot({ ...this.state,\n        id,\n        exchangeRates: await fetchCurrenciesAll()\n      });\n      this.setState({\n        value: '',\n        description: ''\n      });\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target: {\n          name,\n          value\n        }\n      } = _ref;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      expenses\n    } = this.props;\n    expenses();\n  }\n\n  render() {\n    const {\n      currencies,\n      fethiching\n    } = this.props;\n    const {\n      inpValue,\n      inpDescription,\n      inpCurrency,\n      inpMethod,\n      inpTag\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"value-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Valor de despesa\",\n          \"data-testid\": \"value-input\",\n          name: \"value-input\",\n          onChange: this.handleChange,\n          value: inpValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Descri\\xE7\\xE3o da despesa\",\n          \"data-testid\": \"description-input\",\n          name: \"description-input\",\n          onChange: this.handleChange,\n          value: inpDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency-input\",\n        children: [\"Moedas\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"currency-input\",\n          \"data-testid\": \"currency-input\",\n          id: \"currency-input\",\n          onChange: this.handleChange,\n          value: inpCurrency,\n          children: fethiching ? /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 28\n          }, this) : currencies.map(curr => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: curr\n          }, curr, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 40\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"method-input\",\n        children: [\"Forma de pagamento:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"method-input\",\n          \"data-testid\": \"method-input\",\n          onChange: this.handleChange,\n          value: inpMethod,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Dinheiro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Cart\\xE3o de cr\\xE9dito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Cart\\xE3o de d\\xE9bito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tag-input\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"tag-input\",\n          \"data-testid\": \"tag-input\",\n          onChange: this.handleChange,\n          value: inpTag,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Alimenta\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Lazer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Trabalho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Transporte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Sa\\xFAde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.handleSubmit,\n        children: \"Adicionar despesa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  fethiching: state.wallet.fethiching,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  expenses: () => dispatch(fetchAPI()),\n  dispatchTotal: data => dispatch(walletDispacth(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\nWalletForm.propTypes = {\n  dispatchTot: PropTypes.func.isRequired,\n  fethiching: PropTypes.bool.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  expense: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  expenses: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","Component","PropTypes","connect","fetchCurrenciesAll","INITIAL_STATE","inpValue","inpDescription","inpCurrency","inpMethod","inpTag","WalletForm","state","handleSubmit","event","preventDefault","dispatchTot","expense","props","id","length","exchangeRates","setState","value","description","handleChange","target","name","componentDidMount","expenses","render","currencies","fethiching","map","curr","mapStateToProps","wallet","mapDispatchToProps","dispatch","fetchAPI","dispatchTotal","data","walletDispacth","propTypes","func","isRequired","bool","arrayOf","string","shape"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trybewallet/src/components/WalletForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrenciesAll } from '../redux/actions';\n\nconst INITIAL_STATE = {\n  inpValue: '',\n  inpDescription: '',\n  inpCurrency: 'USD',\n  inpMethod: 'Dinheiro',\n  inpTag: 'Alimentação',\n};\n\nclass WalletForm extends Component {\n  state = INITIAL_STATE;\n\n  componentDidMount() {\n    const { expenses } = this.props;\n    expenses();\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { dispatchTot, expense } = this.props;\n    const id = expense.length;\n    dispatchTot({ ...this.state, id, exchangeRates: await fetchCurrenciesAll() });\n    this.setState({\n      value: '',\n      description: '',\n    });\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { currencies, fethiching } = this.props;\n    const { inpValue, inpDescription, inpCurrency, inpMethod, inpTag } = this.state;\n    return (\n      <form>\n        <label htmlFor=\"value-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Valor de despesa\"\n            data-testid=\"value-input\"\n            name=\"value-input\"\n            onChange={ this.handleChange }\n            value={ inpValue }\n          />\n        </label>\n        <label htmlFor=\"description-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Descrição da despesa\"\n            data-testid=\"description-input\"\n            name=\"description-input\"\n            onChange={ this.handleChange }\n            value={ inpDescription }\n          />\n        </label>\n        <label htmlFor=\"currency-input\">\n          Moedas\n          <select\n            name=\"currency-input\"\n            data-testid=\"currency-input\"\n            id=\"currency-input\"\n            onChange={ this.handleChange }\n            value={ inpCurrency }\n          >\n            { fethiching ? <option>Loading...</option> : (\n              currencies.map((curr) => <option key={ curr }>{ curr }</option>))}\n          </select>\n        </label>\n        <label htmlFor=\"method-input\">\n          Forma de pagamento:\n          <select\n            name=\"method-input\"\n            data-testid=\"method-input\"\n            onChange={ this.handleChange }\n            value={ inpMethod }\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag-input\">\n          <select\n            name=\"tag-input\"\n            data-testid=\"tag-input\"\n            onChange={ this.handleChange }\n            value={ inpTag }\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n        <button type=\"submit\" onClick={ this.handleSubmit }>\n          Adicionar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  fethiching: state.wallet.fethiching,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  expenses: () => dispatch(fetchAPI()),\n  dispatchTotal: (data) => dispatch(walletDispacth(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n\nWalletForm.propTypes = {\n  dispatchTot: PropTypes.func.isRequired,\n  fethiching: PropTypes.bool.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  expense: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  expenses: PropTypes.func.isRequired,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}