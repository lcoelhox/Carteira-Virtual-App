{"ast":null,"code":"var _jsxFileName = \"/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trybewallet/src/components/WalletForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrenciesAll, requestRates } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação'\n};\n\nclass WalletForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = { ...INITIAL_STATE\n    };\n\n    this.handleSubmitButton = async () => {\n      const {\n        getExpense\n      } = this.props;\n      getExpense(this.state);\n      this.setState({ ...INITIAL_STATE\n      });\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target: {\n          name,\n          value\n        }\n      } = _ref;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getListThunk\n    } = this.props;\n    getListThunk();\n  }\n\n  render() {\n    const {\n      currencies,\n      fethiching\n    } = this.props;\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"value-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Valor de despesa\",\n          \"data-testid\": \"value-input\",\n          name: \"value-input\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Descri\\xE7\\xE3o da despesa\",\n          \"data-testid\": \"description-input\",\n          name: \"description-input\",\n          onChange: this.handleChange,\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency-input\",\n        children: [\"Moedas\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"currency-input\",\n          \"data-testid\": \"currency-input\",\n          id: \"currency-input\",\n          onChange: this.handleChange,\n          value: currency,\n          children: fethiching ? /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 28\n          }, this) : currencies.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"method-input\",\n        children: [\"Forma de pagamento:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"method-input\",\n          \"data-testid\": \"method-input\",\n          onChange: this.handleChange,\n          value: method,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dinheiro\",\n            children: \"Dinheiro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cr\\xE9dito\",\n            children: \"Cart\\xE3o de cr\\xE9dito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"D\\xE9bito\",\n            children: \"Cart\\xE3o de d\\xE9bito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tag-input\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"tag-input\",\n          \"data-testid\": \"tag-input\",\n          onChange: this.handleChange,\n          value: tag,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Alimenta\\xE7\\xE3o\",\n            children: \"Alimenta\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Lazer\",\n            children: \"Lazer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Trabalho\",\n            children: \"Trabalho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Transporte\",\n            children: \"Transporte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Sa\\xFAde\",\n            children: \"Sa\\xFAde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.handleSubmitButton,\n        children: \"Adicionar despesas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  fethiching: state.wallet.fethiching,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getListThunk: () => dispatch(fetchCurrenciesAll()),\n  getExpense: expense => dispatch(requestRates(expense))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\nWalletForm.propTypes = {\n  // expenses: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  // dispatch: PropTypes.func.isRequired,\n  fethiching: PropTypes.bool.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  getListThunk: PropTypes.func.isRequired,\n  getExpense: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","Component","PropTypes","connect","fetchCurrenciesAll","requestRates","INITIAL_STATE","value","description","currency","method","tag","WalletForm","state","handleSubmitButton","getExpense","props","setState","handleChange","target","name","componentDidMount","getListThunk","render","currencies","fethiching","map","option","index","mapStateToProps","wallet","expenses","mapDispatchToProps","dispatch","expense","propTypes","bool","isRequired","arrayOf","string","func"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trybewallet/src/components/WalletForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrenciesAll, requestRates } from '../redux/actions';\n\nconst INITIAL_STATE = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n};\n\nclass WalletForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  componentDidMount() {\n    const { getListThunk } = this.props;\n    getListThunk();\n  }\n\n  handleSubmitButton = async () => {\n    const { getExpense } = this.props;\n    getExpense(this.state);\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { currencies, fethiching } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    return (\n      <form>\n        <label htmlFor=\"value-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Valor de despesa\"\n            data-testid=\"value-input\"\n            name=\"value-input\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"description-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Descrição da despesa\"\n            data-testid=\"description-input\"\n            name=\"description-input\"\n            onChange={ this.handleChange }\n            value={ description }\n          />\n        </label>\n        <label htmlFor=\"currency-input\">\n          Moedas\n          <select\n            name=\"currency-input\"\n            data-testid=\"currency-input\"\n            id=\"currency-input\"\n            onChange={ this.handleChange }\n            value={ currency }\n          >\n            { fethiching ? <option>Loading...</option> : (\n              currencies.map((option, index) => (\n                <option\n                  key={ index }\n                  value={ option }\n                >\n                  { option }\n                </option>))\n            )}\n          </select>\n        </label>\n        <label htmlFor=\"method-input\">\n          Forma de pagamento:\n          <select\n            name=\"method-input\"\n            data-testid=\"method-input\"\n            onChange={ this.handleChange }\n            value={ method }\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Crédito\">Cartão de crédito</option>\n            <option value=\"Débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag-input\">\n          <select\n            name=\"tag-input\"\n            data-testid=\"tag-input\"\n            onChange={ this.handleChange }\n            value={ tag }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button type=\"submit\" onClick={ this.handleSubmitButton }>\n          Adicionar despesas\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  fethiching: state.wallet.fethiching,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getListThunk: () => dispatch(fetchCurrenciesAll()),\n  getExpense: (expense) => dispatch(requestRates(expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n\nWalletForm.propTypes = {\n  // expenses: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  // dispatch: PropTypes.func.isRequired,\n  fethiching: PropTypes.bool.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  getListThunk: PropTypes.func.isRequired,\n  getExpense: PropTypes.func.isRequired,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}