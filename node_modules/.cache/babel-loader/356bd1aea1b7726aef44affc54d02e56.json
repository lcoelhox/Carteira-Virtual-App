{"ast":null,"code":"import fechAPIAll from '../../requestAPI';\nexport const SAVE_LOGIN = 'SAVE_LOGIN';\nexport const REQUEST_CURRENCIES = 'REQUEST_CURRENCIES';\nexport const SUCESS_CURRENCIES = 'SUCESS_CURRENCIES';\nexport const FAIL_CURRENCIES = 'FAIL_CURRENCIES';\nexport const REQUEST_RATES_STORE = 'REQUEST_RATES_STORE';\nexport const RECEIVE_RATES_STORE = 'RECEIVE_RATES_STORE';\nexport const saveLogin = email => ({\n  type: SAVE_LOGIN,\n  email,\n  pay: email\n});\nexport const requestCurrencies = () => ({\n  type: REQUEST_CURRENCIES\n});\nexport const sucessCurrencies = pay => ({\n  type: SUCESS_CURRENCIES,\n  pay\n});\nexport const failCurrencies = error => ({\n  type: FAIL_CURRENCIES,\n  error\n});\nexport const requestRatesStore = () => ({\n  type: REQUEST_RATES_STORE\n});\nexport const receiveRatesStore = pay => ({\n  type: RECEIVE_RATES_STORE,\n  pay\n});\nexport const fetchCurrenciesAll = () => async dispatch => {\n  dispatch(requestCurrencies());\n  const responseFetch = await fechAPIAll();\n  const pay = Object.keys(responseFetch).filter(sg => sg !== 'USDT');\n  dispatch(receiveRatesStore(pay));\n};\nexport const requestRates = expenses => async (dispatch, getState) => {\n  const responseFetch = await fechAPIAll();\n  dispatch(requestRatesStore());\n  const pay = {\n    id: getState().wallet.idCont,\n    ...expenses,\n    exchangeRates: responseFetch\n  };\n  dispatch(receiveRatesStore(pay));\n};","map":{"version":3,"names":["fechAPIAll","SAVE_LOGIN","REQUEST_CURRENCIES","SUCESS_CURRENCIES","FAIL_CURRENCIES","REQUEST_RATES_STORE","RECEIVE_RATES_STORE","saveLogin","email","type","pay","requestCurrencies","sucessCurrencies","failCurrencies","error","requestRatesStore","receiveRatesStore","fetchCurrenciesAll","dispatch","responseFetch","Object","keys","filter","sg","requestRates","expenses","getState","id","wallet","idCont","exchangeRates"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trybewallet/src/redux/actions/index.js"],"sourcesContent":["import fechAPIAll from '../../requestAPI';\n\nexport const SAVE_LOGIN = 'SAVE_LOGIN';\nexport const REQUEST_CURRENCIES = 'REQUEST_CURRENCIES';\nexport const SUCESS_CURRENCIES = 'SUCESS_CURRENCIES';\nexport const FAIL_CURRENCIES = 'FAIL_CURRENCIES';\nexport const REQUEST_RATES_STORE = 'REQUEST_RATES_STORE';\nexport const RECEIVE_RATES_STORE = 'RECEIVE_RATES_STORE';\n\nexport const saveLogin = (email) => ({\n  type: SAVE_LOGIN,\n  email,\n  pay: email,\n});\n\nexport const requestCurrencies = () => ({\n  type: REQUEST_CURRENCIES,\n});\n\nexport const sucessCurrencies = (pay) => ({\n  type: SUCESS_CURRENCIES,\n  pay,\n});\n\nexport const failCurrencies = (error) => ({\n  type: FAIL_CURRENCIES,\n  error,\n});\n\nexport const requestRatesStore = () => ({\n  type: REQUEST_RATES_STORE,\n});\n\nexport const receiveRatesStore = (pay) => ({\n  type: RECEIVE_RATES_STORE,\n  pay,\n});\n\nexport const fetchCurrenciesAll = () => async (dispatch) => {\n  dispatch(requestCurrencies());\n  const responseFetch = await fechAPIAll();\n\n  const pay = Object.keys(responseFetch).filter((sg) => sg !== 'USDT');\n  dispatch(receiveRatesStore(pay));\n};\n\nexport const requestRates = (expenses) => async (dispatch, getState) => {\n  const responseFetch = await fechAPIAll();\n  dispatch(requestRatesStore());\n  const pay = {\n    id: getState().wallet.idCont,\n    ...expenses,\n    exchangeRates: responseFetch,\n  };\n  dispatch(receiveRatesStore(pay));\n};\n"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,SAAS,GAAIC,KAAD,KAAY;EACnCC,IAAI,EAAER,UAD6B;EAEnCO,KAFmC;EAGnCE,GAAG,EAAEF;AAH8B,CAAZ,CAAlB;AAMP,OAAO,MAAMG,iBAAiB,GAAG,OAAO;EACtCF,IAAI,EAAEP;AADgC,CAAP,CAA1B;AAIP,OAAO,MAAMU,gBAAgB,GAAIF,GAAD,KAAU;EACxCD,IAAI,EAAEN,iBADkC;EAExCO;AAFwC,CAAV,CAAzB;AAKP,OAAO,MAAMG,cAAc,GAAIC,KAAD,KAAY;EACxCL,IAAI,EAAEL,eADkC;EAExCU;AAFwC,CAAZ,CAAvB;AAKP,OAAO,MAAMC,iBAAiB,GAAG,OAAO;EACtCN,IAAI,EAAEJ;AADgC,CAAP,CAA1B;AAIP,OAAO,MAAMW,iBAAiB,GAAIN,GAAD,KAAU;EACzCD,IAAI,EAAEH,mBADmC;EAEzCI;AAFyC,CAAV,CAA1B;AAKP,OAAO,MAAMO,kBAAkB,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAC1DA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;EACA,MAAMQ,aAAa,GAAG,MAAMnB,UAAU,EAAtC;EAEA,MAAMU,GAAG,GAAGU,MAAM,CAACC,IAAP,CAAYF,aAAZ,EAA2BG,MAA3B,CAAmCC,EAAD,IAAQA,EAAE,KAAK,MAAjD,CAAZ;EACAL,QAAQ,CAACF,iBAAiB,CAACN,GAAD,CAAlB,CAAR;AACD,CANM;AAQP,OAAO,MAAMc,YAAY,GAAIC,QAAD,IAAc,OAAOP,QAAP,EAAiBQ,QAAjB,KAA8B;EACtE,MAAMP,aAAa,GAAG,MAAMnB,UAAU,EAAtC;EACAkB,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;EACA,MAAML,GAAG,GAAG;IACViB,EAAE,EAAED,QAAQ,GAAGE,MAAX,CAAkBC,MADZ;IAEV,GAAGJ,QAFO;IAGVK,aAAa,EAAEX;EAHL,CAAZ;EAKAD,QAAQ,CAACF,iBAAiB,CAACN,GAAD,CAAlB,CAAR;AACD,CATM"},"metadata":{},"sourceType":"module"}