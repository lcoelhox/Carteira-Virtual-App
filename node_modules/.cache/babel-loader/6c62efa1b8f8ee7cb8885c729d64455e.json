{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { REQUEST_CURRENCIES, SUCESS_CURRENCIES, FAIL_CURRENCIES, EXPENSES_COTATION_SUCESS } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n  error: '',\n  fethiching: false\n};\n\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_CURRENCIES:\n      return { ...state,\n        fethiching: true\n      };\n\n    case SUCESS_CURRENCIES:\n      return { ...state,\n        currencies: action.currencies,\n        fethiching: false\n      };\n\n    case FAIL_CURRENCIES:\n      return { ...state,\n        error: action.error,\n        fethiching: false\n      };\n\n    case EXPENSES_COTATION_SUCESS:\n      return { ...state,\n        expenses: [...state.expenses, {\n          id: state.expenses.length,\n          ...action.pay.expenses,\n          exchangeRates: action.pay.cotation\n        }],\n        fethiching: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"names":["REQUEST_CURRENCIES","SUCESS_CURRENCIES","FAIL_CURRENCIES","EXPENSES_COTATION_SUCESS","INITIAL_STATE","currencies","expenses","editor","idToEdit","error","fethiching","wallet","state","action","type","id","length","pay","exchangeRates","cotation"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Turma23A/sd-023-a-project-trybewallet/src/redux/reducers/wallet.js"],"sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport {\n  REQUEST_CURRENCIES,\n  SUCESS_CURRENCIES,\n  FAIL_CURRENCIES,\n  EXPENSES_COTATION_SUCESS,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n  error: '',\n  fethiching: false,\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_CURRENCIES: return {\n    ...state,\n    fethiching: true,\n  };\n\n  case SUCESS_CURRENCIES: return {\n    ...state,\n    currencies: action.currencies,\n    fethiching: false,\n  };\n\n  case FAIL_CURRENCIES: return {\n    ...state,\n    error: action.error,\n    fethiching: false,\n  };\n\n  case EXPENSES_COTATION_SUCESS: return {\n    ...state,\n    expenses: [...state.expenses, {\n      id: state.expenses.length,\n      ...action.pay.expenses,\n      exchangeRates: action.pay.cotation,\n    }],\n    fethiching: false,\n  };\n\n  default: return state;\n  }\n};\n\nexport default wallet;\n"],"mappings":"AAAA;AACA,SACEA,kBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,wBAJF,QAKO,YALP;AAOA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,QAAQ,EAAE,EAFU;EAGpBC,MAAM,EAAE,KAHY;EAIpBC,QAAQ,EAAE,CAJU;EAKpBC,KAAK,EAAE,EALa;EAMpBC,UAAU,EAAE;AANQ,CAAtB;;AASA,MAAMC,MAAM,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BR,aAA0B;EAAA,IAAXS,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKd,kBAAL;MAAyB,OAAO,EAC9B,GAAGY,KAD2B;QAE9BF,UAAU,EAAE;MAFkB,CAAP;;IAKzB,KAAKT,iBAAL;MAAwB,OAAO,EAC7B,GAAGW,KAD0B;QAE7BP,UAAU,EAAEQ,MAAM,CAACR,UAFU;QAG7BK,UAAU,EAAE;MAHiB,CAAP;;IAMxB,KAAKR,eAAL;MAAsB,OAAO,EAC3B,GAAGU,KADwB;QAE3BH,KAAK,EAAEI,MAAM,CAACJ,KAFa;QAG3BC,UAAU,EAAE;MAHe,CAAP;;IAMtB,KAAKP,wBAAL;MAA+B,OAAO,EACpC,GAAGS,KADiC;QAEpCN,QAAQ,EAAE,CAAC,GAAGM,KAAK,CAACN,QAAV,EAAoB;UAC5BS,EAAE,EAAEH,KAAK,CAACN,QAAN,CAAeU,MADS;UAE5B,GAAGH,MAAM,CAACI,GAAP,CAAWX,QAFc;UAG5BY,aAAa,EAAEL,MAAM,CAACI,GAAP,CAAWE;QAHE,CAApB,CAF0B;QAOpCT,UAAU,EAAE;MAPwB,CAAP;;IAU/B;MAAS,OAAOE,KAAP;EA5BT;AA8BD,CA/BD;;AAiCA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}